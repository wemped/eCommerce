-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema eCommerce
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema eCommerce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `eCommerce` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `eCommerce` ;

-- -----------------------------------------------------
-- Table `eCommerce`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `first_name` VARCHAR(45) NULL COMMENT '',
  `last_name` VARCHAR(45) NULL COMMENT '',
  `email` VARCHAR(45) NULL COMMENT '',
  `password` VARCHAR(45) NULL COMMENT '',
  `user_level` INT NULL COMMENT '',
  `created_at` DATETIME NULL COMMENT '',
  `updated_at` DATETIME NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eCommerce`.`artists`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`artists` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `artist` VARCHAR(255) NULL COMMENT '',
  `description` TEXT NULL COMMENT '',
  `created_at` DATETIME NULL COMMENT '',
  `updated_at` DATETIME NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eCommerce`.`albums`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`albums` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `title` VARCHAR(45) NULL COMMENT '',
  `album_cover` VARCHAR(255) NULL COMMENT '',
  `description` TEXT NULL COMMENT '',
  `inventory` INT NULL COMMENT '',
  `created_at` DATETIME NULL COMMENT '',
  `updated_at` DATETIME NULL COMMENT '',
  `artist_id` INT NOT NULL COMMENT '',
  `price` VARCHAR(45) NULL COMMENT '',
  `sold` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`, `artist_id`)  COMMENT '',
  INDEX `fk_albums_artists1_idx` (`artist_id` ASC)  COMMENT '',
  CONSTRAINT `fk_albums_artists1`
    FOREIGN KEY (`artist_id`)
    REFERENCES `eCommerce`.`artists` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eCommerce`.`shipping_addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`shipping_addresses` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `address` VARCHAR(45) NULL COMMENT '',
  `unit` VARCHAR(255) NULL COMMENT '',
  `city` VARCHAR(90) NULL COMMENT '',
  `state` VARCHAR(2) NULL COMMENT '',
  `zip` INT NULL COMMENT '',
  `first_name` VARCHAR(45) NULL COMMENT '',
  `last_name` VARCHAR(45) NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  `created_at` DATETIME NULL COMMENT '',
  `updated_at` DATETIME NULL COMMENT '',
  PRIMARY KEY (`id`, `user_id`)  COMMENT '',
  INDEX `fk_shipping_addresses_users1_idx` (`user_id` ASC)  COMMENT '',
  CONSTRAINT `fk_shipping_addresses_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `eCommerce`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eCommerce`.`billing_addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`billing_addresses` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `address` VARCHAR(45) NULL COMMENT '',
  `unit` VARCHAR(45) NULL COMMENT '',
  `city` VARCHAR(45) NULL COMMENT '',
  `state` VARCHAR(45) NULL COMMENT '',
  `zip` INT NULL COMMENT '',
  `first_name` VARCHAR(45) NULL COMMENT '',
  `last_name` VARCHAR(45) NULL COMMENT '',
  `user_id` INT NOT NULL COMMENT '',
  `created_at` DATETIME NULL COMMENT '',
  `updated_at` DATETIME NULL COMMENT '',
  PRIMARY KEY (`id`, `user_id`)  COMMENT '',
  INDEX `fk_billing_addresses_users1_idx` (`user_id` ASC)  COMMENT '',
  CONSTRAINT `fk_billing_addresses_users1`
    FOREIGN KEY (`user_id`)
    REFERENCES `eCommerce`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eCommerce`.`orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`orders` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `email` VARCHAR(45) NULL COMMENT '',
  `shipping_address_id` INT NOT NULL COMMENT '',
  `billing_address_id` INT NOT NULL COMMENT '',
  `created_at` DATETIME NOT NULL COMMENT '',
  `total` VARCHAR(45) NOT NULL COMMENT '',
  `state` VARCHAR(45) NOT NULL COMMENT '',
  PRIMARY KEY (`id`, `shipping_address_id`, `billing_address_id`)  COMMENT '',
  INDEX `fk_orders_addresses2_idx` (`shipping_address_id` ASC)  COMMENT '',
  INDEX `fk_orders_billing_addresses1_idx` (`billing_address_id` ASC)  COMMENT '',
  CONSTRAINT `fk_orders_addresses2`
    FOREIGN KEY (`shipping_address_id`)
    REFERENCES `eCommerce`.`shipping_addresses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_billing_addresses1`
    FOREIGN KEY (`billing_address_id`)
    REFERENCES `eCommerce`.`billing_addresses` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eCommerce`.`genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`genres` (
  `id` INT NOT NULL AUTO_INCREMENT COMMENT '',
  `genre` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`id`)  COMMENT '')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eCommerce`.`albums_has_orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`albums_has_orders` (
  `album_id` INT NOT NULL COMMENT '',
  `order_id` INT NOT NULL COMMENT '',
  `quantity` VARCHAR(45) NULL COMMENT '',
  PRIMARY KEY (`album_id`, `order_id`)  COMMENT '',
  INDEX `fk_albums_has_orders_orders1_idx` (`order_id` ASC)  COMMENT '',
  INDEX `fk_albums_has_orders_albums1_idx` (`album_id` ASC)  COMMENT '',
  CONSTRAINT `fk_albums_has_orders_albums1`
    FOREIGN KEY (`album_id`)
    REFERENCES `eCommerce`.`albums` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_albums_has_orders_orders1`
    FOREIGN KEY (`order_id`)
    REFERENCES `eCommerce`.`orders` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `eCommerce`.`albums_has_genres`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `eCommerce`.`albums_has_genres` (
  `album_id` INT NOT NULL COMMENT '',
  `genre_id` INT NOT NULL COMMENT '',
  PRIMARY KEY (`album_id`, `genre_id`)  COMMENT '',
  INDEX `fk_albums_has_genres_genres1_idx` (`genre_id` ASC)  COMMENT '',
  INDEX `fk_albums_has_genres_albums1_idx` (`album_id` ASC)  COMMENT '',
  CONSTRAINT `fk_albums_has_genres_albums1`
    FOREIGN KEY (`album_id`)
    REFERENCES `eCommerce`.`albums` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_albums_has_genres_genres1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `eCommerce`.`genres` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
